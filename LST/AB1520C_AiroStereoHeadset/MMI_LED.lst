C251 COMPILER V5.57.0,  MMI_LED                                                            08/11/20  05:53:00  PAGE 1   


C251 COMPILER V5.57.0, COMPILATION OF MODULE MMI_LED
OBJECT MODULE PLACED IN .\output\AB1520C_AiroStereoHeadset\MMI_LED.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE source\MMI\MMI_LED.c XSMALL HPTR FUNCTIONS(REENTRANT) ROM(HUGE) WARNIN
                    -GLEVEL(3) OPTIMIZE(9,SPEED) BROWSE ORDER INCDIR(.\source\COMMON;.\source\SECTOR;.\source\ABSDRIVER;.\source\OS;.\source\
                    -HC;.\source\LM;.\source\LC;.\source\ROM;.\source\ROM\COMMON;.\source\ROM\OS;.\source\ROM\HC;.\source\ROM\LL;.\source\ROM
                    -\LC;.\source\ROM\HAL;.\source\ROM\KERNEL;.\source\ROM\DRIVER;.\source\ROM\L2CAP;.\source\ROM\GAP;.\source\ROM\MMI_LE;.\s
                    -ource\ROM\SECTOR;.\source\ROM\SECTOR\Config0;.\source\SECTOR\Config0;.\source\SECTOR\Config1;.\source\SECTOR\DspData;.\s
                    -ource\SECTOR\Runtime;.\source\SECTOR\VoiceData;.\source\SECTOR\SectorBoundary;.\source\SECTOR\ToolMisc) DEFINE(FLASH_INI
                    -T=1,AB1520C,MIGRATE_ROM_TO_FLASH,DFU_LOADER_IN_BOOT_CODE,TWS_SETTINGS) DEBUG PRINT(.\LST\AB1520C_AiroStereoHeadset\MMI_L
                    -ED.lst) TABS(2) OBJECT(.\output\AB1520C_AiroStereoHeadset\MMI_LED.obj) 

stmt  level    source

    1          //////////////////////////////////////////////////////////
    2          // Copyright@ 2016 Airoha.  All right reserved.
    3          //////////////////////////////////////////////////////////
    4          #include "reside_flash.inc"
    5          
    6          #include "os.h"
    7          #include "bt_config_profile.h"
    8          #include "MMI.h"
    9          #include "MMI_Driver.h"
   10          #include "MMI_SectorManager.h"
   11          #include "MMI_LED.h"
   12          #include "..\Driver\Driver_LED.h"
   13          #include "MMI_AirModule.h"
   14          
   15          PUBLIC void MMI_LED_SendLedFilterCmd(U8 index)
   16          {
   17   1        if(MMI_SDK_DISABLE_LED_FILTER_FEAT)
   18   1          return;
   19   1      
   20   1        DRIVER_Cmd_LED_FilterLed(gMMI_nvram.ledFilterMap[index].type, gMMI_nvram.ledFilterMap[index].para);
   21   1      }
   22          
   23          PUBLIC void MMI_LED_SendFGLedCmd(U16 eventCode, U8 evtTableIndex)
   24          {
   25   1        if(gMMI_nvram.evtParaCtl[evtTableIndex].ledDataIndex == LED_INVALID)
   26   1          return;
   27   1      
   28   1        if(MMI_SDK_DISABLE_FOREGROUND_LED_FEAT)
   29   1          return;
   30   1          
   31   1        if(gMMI_nvram.evtParaCtl[evtTableIndex].ledDataIndex & LED_RESET_FG_BIT)
   32   1          DRIVER_Cmd_LED_Restart(DRIVER_CMD_LED_RESTART_PARA_ONLY_FG);
   33   1      
   34   1        DRIVER_Cmd_LED_FGLed((gMMI_nvram.evtParaCtl[evtTableIndex].ledDataIndex & ~(LED_RESET_FG_BIT|LED_OVERRID
             -E_BIT)),
   35   1                  (gMMI_nvram.evtParaCtl[evtTableIndex].Timeout & EVENT_LED_FG_TIMEOUT_MASK),
   36   1                  eventCode,
   37   1                  ((gMMI_nvram.evtParaCtl[evtTableIndex].ledDataIndex & LED_OVERRIDE_BIT)? TRUE:FALSE ));
   38   1      
   39   1        if(eventCode == MEDIA_EVT_KEY_RESET_PAIRED_DEVICES)
   40   1        {
   41   2          gMMI_ctl.driverCtl.resetPairedDeviceMediaCount++;
   42   2        }
   43   1      }
   44          
   45          PUBLIC void MMI_LED_SendBGLedCmd(U8 ledDataIndex)
   46          {
   47   1        if(MMI_SDK_DISABLE_BACKGROUND_LED_FEAT)
   48   1          return;
   49   1      
   50   1        #ifdef AIR_MODULE
   51   1        MMI_AIR_SendBGLedCmd(ledDataIndex);
C251 COMPILER V5.57.0,  MMI_LED                                                            08/11/20  05:53:00  PAGE 2   

   52   1        #endif
   53   1        DRIVER_Cmd_LED_BGLed(ledDataIndex);
   54   1      }
   55          
   56          PUBLIC void MMI_LED_KeyOnOffHandler(U8 ledCmd)
   57          {
   58   1        U8 misc = gMMI_DRV_ctl.isMiscEnabled;
   59   1        
   60   1        switch(ledCmd)
   61   1        {
   62   2          case ENABLE_LED:
   63   2            gMMI_driver_variation_nvram.misc_para.init.isMiscEnabled &= (~IS_LED_DISABLED);
   64   2            gMMI_DRV_ctl.isMiscEnabled &= (~IS_LED_DISABLED);
   65   2            break;
   66   2      
   67   2          case DISABLE_LED:
   68   2            gMMI_driver_variation_nvram.misc_para.init.isMiscEnabled |= IS_LED_DISABLED;
   69   2            gMMI_DRV_ctl.isMiscEnabled |= IS_LED_DISABLED;
   70   2            break;
   71   2      
   72   2          case TOGGLE_LED:
   73   2            gMMI_driver_variation_nvram.misc_para.init.isMiscEnabled ^= IS_LED_DISABLED;
   74   2            gMMI_DRV_ctl.isMiscEnabled ^= IS_LED_DISABLED;
   75   2            if (gMMI_driver_variation_nvram.misc_para.init.isMiscEnabled & IS_LED_DISABLED)
   76   2            {
   77   3              //LED is enabled, so toggle to disabled
   78   3              MMI_PushMediaEvent(MEDIA_EVT_KEY_DISABLE_LED);
   79   3            }
   80   2            else
   81   2            {
   82   3              //LED is disabled, so toggle to enabled
   83   3              MMI_PushMediaEvent(MEDIA_EVT_KEY_ENABLE_LED);
   84   3            }
   85   2            break;
   86   2        }
   87   1      
   88   1        if (gMMI_DRV_ctl.isMiscEnabled != misc)
   89   1          DRIVER_Cmd_LED_Restart(DRIVER_CMD_LED_RESTART_PARA_FG_AND_BG);
   90   1      
   91   1        MMI_SECTOR_SetUpdateFlag(TRUE);
   92   1      }
   93          
   94          #ifdef LIGHTING_ENABLE
               //U8 led_R_tmp,led_G_tmp,led_B_tmp; //[Vanessa]This is unused. Only assign in code.
               //U8 RGB_old_v[3]; //[Vanessa]This is unused. Only assign in code.
               U8 RGB_new_v[3];
               //U8 rgb_val_out[3]; //[Vanessa]This is unused. Only assign in code.
               //U8 RGB_change_time,RGB_update_key,RGB_shift_k,RGB_shift_v; //[Vanessa]This is unused.
               
               //0  16  33  50  67  84  101  118  135  152  169  186  203  220  237  254
               //  1 2 3 4   5 6 7  8     9    10  11   12   13   14   15
               U8 CODE Led_R[16][16]={ 
               // 0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15    <-- Band
               {  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1},  // Vol  0
               {  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1},  // Vol  1
               {  1,  7,  1,  9,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1},  // Vol  2
               {  1, 10,  7,  4,  4,  4,  4, 15, 15,  4,  4,  1,  4, 15,  4,  1},  // Vol  3
               {  1,  1,  7,  4,  4,  4,  4, 12, 11, 12,  4,  1,  4, 11,  4,  1},  // Vol  4
               {  0,  5,  5,  4,  4,  4,  4, 12, 12, 12,  4,  0,  4, 12,  4,  0},  // Vol  5
               {  0,  5,  5,  5,  5,  5,  5, 13, 13, 12,  5,  0,  5, 13,  5,  0},  // Vol  6
               {  0,  7,  7,  6,  6,  6,  6, 14, 14, 12,  6,  0,  6, 14,  6,  0},  // Vol  7
               {  1,  6, 10,  6,  6,  6,  6, 15, 15, 12,  6,  1,  6, 15,  6,  1},  // Vol  8
               {  1,  6,  6,  6,  6, 11, 11, 11, 15, 11,  6,  1, 11, 15,  6,  1},  // Vol  9
               {  1, 11, 11,  6,  7, 13, 13, 13, 15, 13,  7,  1, 13, 15,  7,  1},  // Vol 10
               {  3, 11, 11,  7, 10, 14, 14, 14, 15, 14, 10,  3,  3, 15, 10,  3},  // Vol 11
               {  4, 11, 11, 10, 13, 13, 13, 13, 15, 13, 13,  4, 12, 15, 13,  4},  // Vol 12
C251 COMPILER V5.57.0,  MMI_LED                                                            08/11/20  05:53:00  PAGE 3   

               {  6, 11, 11, 11, 13, 15, 13, 13, 15, 13, 13,  6, 13, 15, 13,  6},  // Vol 13
               {  6, 11, 11,  6, 14, 15, 15, 15, 15, 15, 14,  6, 15, 15, 15,  6},  // Vol 14
               { 11, 11,  6,  6, 15, 15, 15, 15, 15, 15, 15, 11, 15, 15, 15, 11}}; // Vol 15
               
               //0  16  33  50  67  84  101  118  135  152  169  186  203  220  237  254
               //  1 2 3 4   5 6 7  8     9    10  11   12   13   14   15                       
               U8 CODE Led_G[16][16]={ 
               // 0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15    <-- Band
               {  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4},  // Vol  0
               {  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4},  // Vol  1
               {  4, 13,  4, 12,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4},  // Vol  2
               {  4, 15, 13,  7,  7,  7,  7, 15, 15,  7,  7,  4,  7, 15,  7,  4},  // Vol  3
               {  4,  7, 13,  7,  7,  7,  7,  2,  0, 12,  7,  4,  7,  0,  7,  4},  // Vol  4
               {  4,  9,  9,  7,  7,  7,  7,  0,  0, 12,  7,  4,  7,  0,  7,  4},  // Vol  5
               {  4,  9,  9,  9,  9,  9,  9,  0,  0, 12,  9,  4,  9,  0,  9,  4},  // Vol  6
               {  4, 13, 13, 11, 11, 11, 11,  0,  0, 12, 11,  4, 11,  0, 11,  4},  // Vol  7
               {  5, 14, 15, 11, 11, 13, 13, 13,  0, 13, 11,  5, 13,  0, 11,  5},  // Vol  8
               {  5, 14, 14, 11, 11, 14, 14, 14,  0, 14, 11,  5, 14,  0, 11,  5},  // Vol  9
               {  5, 15, 15, 11, 13,  8,  8,  0,  0, 11, 13,  5,  8,  0, 13,  5},  // Vol  10
               {  7, 15, 15, 13, 15, 12, 12, 12,  0, 12, 15,  7, 12,  0, 15,  7},  // Vol  11
               {  8, 15, 15, 15,  8, 13, 13, 13,  0, 13, 14,  8, 12, 15, 14,  8},  // Vol  12
               {  9, 15, 15, 15, 14, 15, 13, 13,  0, 13, 14,  9, 13,  0, 14,  9},  // Vol  13
               { 14, 15, 15, 14, 15, 15, 15, 15,  0, 15, 15, 14, 15,  0, 15, 14},  // Vol  14
               { 15, 15, 14, 14, 15, 15, 15, 15,  0, 15, 15, 15, 15,  0, 15, 15}}; // Vol  15
               
               //0  16  33  50  67  84  101  118  135  152  169  186  203  220  237  254
               //  1 2 3 4   5 6 7  8     9    10  11   12   13   14   15
               U8 CODE Led_B[16][16]={ 
               // 0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15    <-- Band
               { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},  // Vol  0
               { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},  // Vol  1
               { 10, 10, 10, 15, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},  // Vol  2
               { 10,  5, 10,  1,  1,  1,  1,  1,  0,  1,  1, 10,  1,  0,  1, 10},  // Vol  3
               { 10, 12, 10,  1,  1,  1,  1,  0,  0,  0,  1, 10,  1,  0,  1, 10},  // Vol  4
               { 13,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1, 15,  1,  0,  1, 13},  // Vol  5
               { 13,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1, 15,  1,  0,  1, 13},  // Vol  6
               { 13, 10, 10,  1,  1,  1,  1,  0,  0,  0,  1, 15,  1,  0,  1, 13},  // Vol  7
               { 15, 15,  5,  1,  1,  1,  1,  0,  0,  0,  1, 15,  1,  0,  1, 15},  // Vol  8
               { 15, 15, 15,  1,  1,  1,  1,  1,  0,  1,  1, 15,  1,  0,  1, 15},  // Vol  9
               { 15, 15, 15,  1,  1,  1,  1,  1,  0,  1,  1, 15,  1,  0, 10, 15},  // Vol  10
               { 15, 15, 15,  1,  5,  1,  1,  1,  0,  1,  5, 15,  1,  0,  5, 15},  // Vol  11
               { 15, 15, 15,  5,  1,  0,  0,  0,  0,  0,  1, 15,  0,  0,  1, 15},  // Vol  12
               { 15, 15, 15, 15,  1,  0,  0,  0,  0,  0,  1, 15,  0,  0,  1, 15},  // Vol  13
               { 15, 15, 15, 15,  3,  0,  0,  0,  0,  0,  3, 15,  0,  0,  0, 15},  // Vol  14
               { 15, 15, 15, 15,  0,  0,  0,  0,  0,  0,  0, 15,  0,  0,  0, 15}}; // Vol  15
               
               PUBLIC void MMI_LED_AlarmClock(U8 enable)
               {
                 U8 ledIndex;
                 LedPatternType XDATA_PTR ledDataPtr = (LedPatternType XDATA_PTR)SYS_MemoryGet(sizeof(LedPatternType));
                 OSMEM_memset_xdata((U8 XDATA_PTR)ledDataPtr, 0, sizeof(LedPatternType));
               
                 for(ledIndex = 0; ledIndex < LED_NO; ledIndex++)
                 {   
                   ledDataPtr->ledSettings[ledIndex].ledFollowMultiplierControl = 0x01;    
                   ledDataPtr->ledSettings[ledIndex].pwmSetting = 0x80;
                   ledDataPtr->ledSettings[ledIndex].t1 = 100;
                   ledDataPtr->ledSettings[ledIndex].t2 = 30;
                   ledDataPtr->ledSettings[ledIndex].t3 = 0;
                   ledDataPtr->ledSettings[ledIndex].rampOnStep= 15;
                   ledDataPtr->ledSettings[ledIndex].rampOffStep= 15;
                   if(enable)
                     ledDataPtr->ledSettings[ledIndex].onOff = LED_ON;
                   else
                     ledDataPtr->ledSettings[ledIndex].onOff = LED_OFF;
                 }
C251 COMPILER V5.57.0,  MMI_LED                                                            08/11/20  05:53:00  PAGE 4   

                 if(enable)
                   LED_SetPatternToHW(ledDataPtr);
                 else
                   LED_TurnOffAllLeds();
                 
                 OSMEM_Put((U8 XDATA_PTR)ledDataPtr);
               }
               PUBLIC void MMI_LED_LightingMode(U8 LightMode)
               {
                 U8 ledIndex;
                 LedPatternType XDATA_PTR ledDataPtr = (LedPatternType XDATA_PTR)SYS_MemoryGet(sizeof(LedPatternType));
                 OSMEM_memset_xdata((U8 XDATA_PTR)ledDataPtr, 0, sizeof(LedPatternType));
                 switch(LightMode)
                 {
                   case 00:
                     for(ledIndex = 0; ledIndex < LED_NO; ledIndex++)
                     {   
                       ledDataPtr->ledSettings[ledIndex].ledFollowMultiplierControl = 0x01;    
                       ledDataPtr->ledSettings[ledIndex].pwmSetting = 0xF0;
                       ledDataPtr->ledSettings[ledIndex].t1 = 80;
                       ledDataPtr->ledSettings[ledIndex].t2 = 10;
                       ledDataPtr->ledSettings[ledIndex].t3 = 0;
                       ledDataPtr->ledSettings[ledIndex].rampOnStep= 15;
                       ledDataPtr->ledSettings[ledIndex].rampOffStep= 7;
                     }
                     break;
                   case 01:
                     for(ledIndex = 0; ledIndex < LED_NO; ledIndex++)
                     {   
                       ledDataPtr->ledSettings[ledIndex].ledFollowMultiplierControl = 0x01;    
                       ledDataPtr->ledSettings[ledIndex].pwmSetting = 0xF0;        
                       ledDataPtr->ledSettings[ledIndex].t3 = 0;
                       ledDataPtr->ledSettings[ledIndex].rampOnStep= 15;
                       ledDataPtr->ledSettings[ledIndex].rampOffStep= 0;
                     }
                     ledDataPtr->ledSettings[0].t1 = 50;
                     ledDataPtr->ledSettings[0].t2 = 20;
                     ledDataPtr->ledSettings[1].t1 = 40;
                     ledDataPtr->ledSettings[1].t2 = 20;
                     ledDataPtr->ledSettings[2].t1 = 30;
                     ledDataPtr->ledSettings[2].t2 = 20;
                     break;    
                   case 02:
                     for(ledIndex = 0; ledIndex < LED_NO; ledIndex++)
                     {   
                       ledDataPtr->ledSettings[ledIndex].ledFollowMultiplierControl = 0x01;    
                       ledDataPtr->ledSettings[ledIndex].pwmSetting = 0xF0;        
                       ledDataPtr->ledSettings[ledIndex].t3 = 0;
                       ledDataPtr->ledSettings[ledIndex].rampOnStep= 15;
                       ledDataPtr->ledSettings[ledIndex].rampOffStep= 0;
                     }
                     ledDataPtr->ledSettings[0].t1 = 5;
                     ledDataPtr->ledSettings[0].t2 = 2;
                     ledDataPtr->ledSettings[1].t1 = 4;
                     ledDataPtr->ledSettings[1].t2 = 2;
                     ledDataPtr->ledSettings[2].t1 = 3;
                     ledDataPtr->ledSettings[2].t2 = 2;    
                     break;
                 }
                 for(ledIndex = 0; ledIndex < LED_NO; ledIndex++)
                 {
                   ledDataPtr->ledSettings[ledIndex].onOff = LED_ON;   
                 }   
                 LED_SetPatternToHW(ledDataPtr);
                 OSMEM_Put((U8 XDATA_PTR)ledDataPtr);
               }
C251 COMPILER V5.57.0,  MMI_LED                                                            08/11/20  05:53:00  PAGE 5   

               PUBLIC void MMI_LED_Set_RGB(U8 LedR, U8 LedG, U8 LedB)
               {
                 U8 ledIndex;
                 LedPatternType XDATA_PTR ledDataPtr = (LedPatternType XDATA_PTR)SYS_MemoryGet(sizeof(LedPatternType));
                 OSMEM_memset_xdata((U8 XDATA_PTR)ledDataPtr, 0, sizeof(LedPatternType));
                 
                 LedR = (LedR/17)<<4;
                 LedG = (LedG/17)<<4;
                 LedB = (LedB/17)<<4;
                 for(ledIndex = 0; ledIndex < LED_NO; ledIndex++)
                 {   
                   ledDataPtr->ledSettings[ledIndex].ledFollowMultiplierControl = 0x01;
                   switch(ledIndex)
                   {
                     case 0:
                       ledDataPtr->ledSettings[ledIndex].pwmSetting = LedR;
                       break;
                     case 1:
                       ledDataPtr->ledSettings[ledIndex].pwmSetting = LedG;
                       break;
                     case 2:
                       ledDataPtr->ledSettings[ledIndex].pwmSetting = LedB;
                       break;
                     default:          
                       ledDataPtr->ledSettings[ledIndex].pwmSetting = 0xF0;
                       break;
                   }
                   ledDataPtr->ledSettings[ledIndex].t1 = 0xFF;
                   ledDataPtr->ledSettings[ledIndex].t2 = 0;
                   ledDataPtr->ledSettings[ledIndex].t3 = 0;
                   ledDataPtr->ledSettings[ledIndex].rampOnStep= 15;
                   ledDataPtr->ledSettings[ledIndex].rampOffStep= 0;
                 }
                 for(ledIndex = 0; ledIndex < LED_NO; ledIndex++)
                 {
                   ledDataPtr->ledSettings[ledIndex].onOff = LED_ON;
                 }   
                 LED_SetPatternToHW(ledDataPtr);
                 OSMEM_Put((U8 XDATA_PTR)ledDataPtr);
               }
               PUBLIC void MMI_LED_Set_MusicYouCanSee(U8 DSP_Index, U8 DSP_Volume)
               {
                 U8 ledIndex;
                 U32 led_tmp;
                 LedPatternType XDATA_PTR ledDataPtr = (LedPatternType XDATA_PTR)SYS_MemoryGet(sizeof(LedPatternType));
                 OSMEM_memset_xdata((U8 XDATA_PTR)ledDataPtr, 0, sizeof(LedPatternType));
               
                 for(ledIndex = 0; ledIndex < LED_NO; ledIndex++)
                 {   
                   ledDataPtr->ledSettings[ledIndex].ledFollowMultiplierControl = 0x01;
                   switch(ledIndex)
                   {
                     case 0:
                               led_tmp = ((Led_R[DSP_Volume][DSP_Index]<<4)&0xF0);//*DSP_scaling;
                               //RGB_old_v[ledIndex] = RGB_new_v[ledIndex]; //[Vanessa]RGB_old_v is unused
                               RGB_new_v[ledIndex] = led_tmp;
                               break;
                     case 1:
                               led_tmp = ((Led_G[DSP_Volume][DSP_Index]<<4)&0xF0);//*DSP_scaling;
                               //RGB_old_v[ledIndex] = RGB_new_v[ledIndex]; //[Vanessa]RGB_old_v is unused
                               RGB_new_v[ledIndex] = led_tmp;
                               break;
                     case 2:
                               led_tmp = ((Led_B[DSP_Volume][DSP_Index]<<4)&0xF0);//*DSP_scaling;
                               //RGB_old_v[ledIndex] = RGB_new_v[ledIndex]; //[Vanessa]RGB_old_v is unused
                               RGB_new_v[ledIndex] = led_tmp;
C251 COMPILER V5.57.0,  MMI_LED                                                            08/11/20  05:53:00  PAGE 6   

                               break;
                     default:          
                               ledDataPtr->ledSettings[ledIndex].pwmSetting = 0xF0;
                               break;
                   }
                   ledDataPtr->ledSettings[ledIndex].t1 = 0xFF;
                   ledDataPtr->ledSettings[ledIndex].t2 = 0;
                   ledDataPtr->ledSettings[ledIndex].t3 = 0;
                   ledDataPtr->ledSettings[ledIndex].rampOnStep = 0;
                   ledDataPtr->ledSettings[ledIndex].rampOffStep = 0;
                 }     
                 for(ledIndex = 0; ledIndex < 3; ledIndex++)
                 {
                   //These two lines are equal to the below 
                   //rgb_val_out[ledIndex] = RGB_new_v[ledIndex];
                   //ledDataPtr->ledSettings[ledIndex].pwmSetting = rgb_val_out[ledIndex]&0xF0;
                   
                   ledDataPtr->ledSettings[ledIndex].pwmSetting = RGB_new_v[ledIndex] & 0xF0;
                 } 
                 //led_R_tmp = rgb_val_out[0]&0xF0;
                 //led_G_tmp = rgb_val_out[1]&0xF0;
                 //led_B_tmp = rgb_val_out[2]&0xF0;
                 for(ledIndex = 0; ledIndex < LED_NO; ledIndex++)
                 {
                   ledDataPtr->ledSettings[ledIndex].onOff = LED_ON;
                 }
                   LED_SetPatternToHW(ledDataPtr);
                   OSMEM_Put((U8 XDATA_PTR)ledDataPtr);
               }
               #endif


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =       312     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
