C251 COMPILER V5.57.0,  voice_command_adaption_data_ctl                                    08/11/20  05:51:59  PAGE 1   


C251 COMPILER V5.57.0, COMPILATION OF MODULE voice_command_adaption_data_ctl
OBJECT MODULE PLACED IN .\output\AB1520C_AiroStereoHeadset\voice_command_adaption_data_ctl.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE source\DRIVER\voice_command_adaption_data_ctl.c XSMALL HPTR FUNCTIONS(
                    -REENTRANT) ROM(HUGE) WARNINGLEVEL(3) OPTIMIZE(9,SPEED) BROWSE ORDER INCDIR(.\source\COMMON;.\source\SECTOR;.\source\ABSD
                    -RIVER;.\source\OS;.\source\HC;.\source\LM;.\source\LC;.\source\ROM;.\source\ROM\COMMON;.\source\ROM\OS;.\source\ROM\HC;.
                    -\source\ROM\LL;.\source\ROM\LC;.\source\ROM\HAL;.\source\ROM\KERNEL;.\source\ROM\DRIVER;.\source\ROM\L2CAP;.\source\ROM\
                    -GAP;.\source\ROM\MMI_LE;.\source\ROM\SECTOR;.\source\ROM\SECTOR\Config0;.\source\SECTOR\Config0;.\source\SECTOR\Config1;
                    -.\source\SECTOR\DspData;.\source\SECTOR\Runtime;.\source\SECTOR\VoiceData;.\source\SECTOR\SectorBoundary;.\source\SECTOR
                    -\ToolMisc) DEFINE(FLASH_INIT=1,AB1520C,MIGRATE_ROM_TO_FLASH,DFU_LOADER_IN_BOOT_CODE,TWS_SETTINGS) DEBUG PRINT(.\LST\AB15
                    -20C_AiroStereoHeadset\voice_command_adaption_data_ctl.lst) TABS(2) OBJECT(.\output\AB1520C_AiroStereoHeadset\voice_comma
                    -nd_adaption_data_ctl.obj) 

stmt  level    source

    1          //////////////////////////////////////////////////////////
    2          // Copyright@ 2011 Airoha.  All right reserved.
    3          //////////////////////////////////////////////////////////
    4          #include <config.h>
    5          #include <cpu.h>
    6          #include "bt_config_profile.h"
    7          #include "voice_command_adaption_data_ctl.h"
    8          #include "voice_command_ctl.h"
    9          #include "..\MMI\MMI_event_opcode.h"
   10          #pragma userclass (HCONST = VO_APD)
   11          
   12          
   13          #ifdef SUPPORT_VOICE_COMMAND
   14          
   15          #if VC_PLAN_MODEL
   16          #pragma INCDIR(.\source\DRIVER\VC_DATA\PLAN)
   17          #else
               #pragma INCDIR(.\source\DRIVER\VC_DATA\AIROHA)
               #endif
   20          
   21          #define VC_EVT_DEFINE(NAME) VC_EVT_##NAME,
   22          enum
   23          {
   24            #include <vc_evt_define_apd.h>
   25          };
   26          
   27          #undef VC_EVT_DEFINE
   28          #define VC_EVT_DEFINE(NAME)       VC_EVT_##NAME##_EVT_BIT = (0x00000001L << (VC_EVT_##NAME)),
   29          enum
   30          {
   31            #include <vc_evt_define_apd.h>
   32          };
   33          #undef VC_EVT_DEFINE
   34          
   35          #include "sector_mmi_nvram_type.h"
   36          #define VC_APD_MMI_OFF              (U32)1<<MMI_OFF
   37          #define VC_APD_MMI_CONDISCABLE          (U32)1<<MMI_CONDISCABLE
   38          #define VC_APD_MMI_CONNECTABLE          (U32)1<<MMI_CONNECTABLE
   39          #define VC_APD_MMI_CONNECTED          (U32)1<<MMI_CONNECTED
   40          #define VC_APD_MMI_HFP_INCOMMING        (U32)1<<MMI_HFP_INCOMMING
   41          #define VC_APD_MMI_HFP_OUTGOING         (U32)1<<MMI_HFP_OUTGOING
   42          #define VC_APD_MMI_HFP_CALLACTIVE       (U32)1<<MMI_HFP_CALLACTIVE
   43          #define VC_APD_MMI_HFP_CALLACTIVE_WITHOUT_SCO (U32)1<<MMI_HFP_CALLACTIVE_WITHOUT_SCO
   44          #define VC_APD_MMI_HFP_CAIMG          (U32)1<<MMI_HFP_CAIMG
   45          #define VC_APD_MMI_HFP_CAOGG          (U32)1<<MMI_HFP_CAOGG
   46          #define VC_APD_MMI_HFP_CAMULTY          (U32)1<<MMI_HFP_CAMULTY
   47          #define VC_APD_MMI_FAKEON           (U32)1<<MMI_FAKEON    
   48          #define VC_APD_MMI_FAKEOFF            (U32)1<<MMI_FAKEOFF
   49          #define VC_APD_MMI_DETACHING_LINK       (U32)1<<MMI_DETACHING_LINK
   50          #define VC_APD_MMI_TEST_MODE          (U32)1<<MMI_TEST_MODE
   51          #define VC_APD_MMI_FM             (U32)1<<MMI_FM
C251 COMPILER V5.57.0,  voice_command_adaption_data_ctl                                    08/11/20  05:51:59  PAGE 2   

   52          #define VC_APD_MMI_LINE_IN            (U32)1<<MMI_LINE_IN
   53          #define VC_APD_MMI_EEPROM_UPDATING        (U32)1<<MMI_UPDATING
   54          #define VC_APD_MMI_EEPROM_UPDATED_OK      (U32)1<<MMI_UPDATED_OK
   55          #define VC_APD_MMI_EEPROM_UPDATED_FAIL      (U32)1<<MMI_UPDATED_FAIL
   56          #define VC_APD_MMI_VOICE_PROMPT_LANG_SELECT   (U32)1<<MMI_VOICE_PROMPT_LANG_SELECT
   57          #define VC_APD_MMI_TWS_PAIRING          (U32)1<<MMI_TWS_PAIRING
   58          
   59          #define VC_APD_MMI_ALL_STATES 0xFFFFFFFF
   60          
   61          
   62          extern U16 CODE dataBase_APD[];
   63          extern DRIVER_VOICE_COMMAND_EVT_DATA_MAP_TYPE CODE gVoiceCommand_APD_EvtDataMap;
   64          
   65          SECTOR_DRIVER_VOICE_COMMAND_APD_STRU CODE gDriverVoiceCommandAPDData =
   66          {
   67            {
   68              {
   69                (U8 GENERIC_PTR)&dataBase_APD,
   70                (U8 GENERIC_PTR)&gVoiceCommand_APD_EvtDataMap
   71              },
   72              DEFAULT_VC_IDENTIFY,
   73              TOTAL_APD_VOICE_COMMAND_EVENTS,//eventNo
   74              VOICE_COMMAND_TRIGGERED_ACTION_PATTERN,     //actionPatternNo
   75              {
   76              #ifdef TWS_SETTINGS
   77                {MEDIA_EVT_KEY_VOICE_COMMAND_ENABLE, 0, VC_APD_MMI_CONDISCABLE|VC_APD_MMI_CONNECTABLE|VC_APD_MMI_CONNE
             -CTED |VC_APD_MMI_TWS_PAIRING , 0}, //SET0
   78              #else
                     {MEDIA_EVT_KEY_VOICE_COMMAND_ENABLE, 0, VC_APD_MMI_CONDISCABLE|VC_APD_MMI_CONNECTABLE|VC_APD_MMI_CONNE
             -CTED, 0},  //SET0
                   #endif
   81                {MEDIA_EVT_ENTER_INCOMING, 1, VC_APD_MMI_HFP_INCOMMING, 1},       //SET1
   82                {MEDIA_EVT_VOICE_COMMAND_MULTILAYER_TRIGGER, 0, VC_APD_MMI_CONDISCABLE|VC_APD_MMI_CONNECTABLE|VC_APD_M
             -MI_CONNECTED, 0},  //SET0
   83              },
   84              {
   85                #if VC_PLAN_MODEL
   86                { //SET0
   87                  { 
   88                    0
   89                  },
   90                  {
   91                    KEY_DISCOVERABLE,         /*VC_EVT_PAIRING*/
   92                    KEY_CHECK_BATTERY_STATUS,   /*VC_EVT_CHECK_BATTERY*/
   93                    KEY_CHECK_STATUS_OF_CONNECTION, /*VC_EVT_AM_I_CONNECTED*/
   94                    KEY_RDIAL,              /*VC_EVT_LAST_CALL_OUT*/
   95                    KEY_WHAT_CAN_I_SAY,       /*VC_EVT_WHAT_CAN_I_SAY*/
   96                    0,                  /*VC_EVT_TAKE_THE_CALL*/
   97                    0,                  /*VC_EVT_REJECT*/ 
   98                    KEY_VOICE_COMMAND_CANCEL,   /*VC_EVT_CANCEL*/ 
   99                    0,                
  100                    0, 
  101                    0, 
  102                  }
  103                },
  104                { //SET1
  105                  { 
  106                    VC_EVT_TAKE_THE_CALL_EVT_BIT
  107                  },
  108                  {
  109                    0,                /*VC_EVT_PAIRING*/
  110                    0,                /*VC_EVT_CHECK_BATTERY*/
  111                    0,                /*VC_EVT_AM_I_CONNECTED*/
  112                    0,                /*VC_EVT_LAST_CALL_OUT*/
  113                    0,                /*VC_EVT_WHAT_CAN_I_SAY*/
  114                    KEY_ACPCALL,          /*VC_EVT_TAKE_THE_CALL*/
C251 COMPILER V5.57.0,  voice_command_adaption_data_ctl                                    08/11/20  05:51:59  PAGE 3   

  115                    KEY_REJCALL,            /*VC_EVT_REJECT*/ 
  116                    0,                /*VC_EVT_CANCEL*/ 
  117                    0,                
  118                    0, 
  119                    0,
  120                  }
  121                },  
  122                #else
                     {
                       {
                         0
                       },
                       {
                         KEY_DISCOVERABLE,         /*VC_EVT_PAIRING*/
                         KEY_CHECK_STATUS,         /*VC_EVT_CHECK_STATUS*/
                         KEY_VOICE_MAKE_A_CALL,        /*VC_EVT_MAKE_A_CALL*/
                         KEY_CHECK_BATTERY_STATUS,     /*VC_EVT_BATTERY_LEVEL*/
                         KEY_CHECK_BATTERY_STATUS,   /*VC_EVT_CHECK_BATTERY*/
                         KEY_CHECK_STATUS_OF_CONNECTION, /*VC_EVT_CONNECTION_STATUS*/
                         KEY_RDIAL,            /*VC_EVT_LAST_CALL_OUT*/ 
                         KEY_SET_VOICE_RECOGNITION,    /*VC_EVT_VOICE_DIAL*/ 
                         KEY_DIALNUM,            /*VC_EVT_RING_BACK*/
                         KEY_WHAT_CAN_I_SAY,       /*VC_EVT_WHAT_CAN_I_SAY*/
                         0,                /*VC_EVT_TAKE_THE_CALL*/ 
                         0,                /*VC_EVT_REJECT*/
                         KEY_VOICE_COMMAND_CANCEL,     /*VC_EVT_CANCEL*/
                         0, 
                         0,
                       }
                     },
                     {
                       {
                         VC_EVT_TAKE_THE_CALL_EVT_BIT
                       },
                       {
                         0,                /*VC_EVT_PAIRING*/
                         0,                /*VC_EVT_CHECK_STATUS*/
                         0,                /*VC_EVT_MAKE_A_CALL*/
                         0,                /*VC_EVT_BATTERY_LEVEL*/
                         0,                /*VC_EVT_CHECK_BATTERY*/
                         0,                /*VC_EVT_CONNECTION_STATUS*/
                         0,                /*VC_EVT_LAST_CALL_OUT*/ 
                         0,                /*VC_EVT_VOICE_DIAL*/ 
                         0,                /*VC_EVT_RING_BACK*/
                         0,                /*VC_EVT_WHAT_CAN_I_SAY*/
                         KEY_ACPCALL,          /*VC_EVT_TAKE_THE_CALL*/ 
                         0,            /*VC_EVT_REJECT*/
                         0,                /*VC_EVT_CANCEL*/
                         0, 
                         0, 
                       }
                     }
                     #endif
  168              },
  169            },
  170            {0, 0}
  171          };
  172          #else
               
               extern U16 CODE dataBase_APD[];
               extern DRIVER_VOICE_COMMAND_EVT_DATA_MAP_TYPE CODE gVoiceCommand_APD_EvtDataMap;
               
               SECTOR_DRIVER_VOICE_COMMAND_APD_STRU CODE gDriverVoiceCommandAPDData =
               {
                 {
                   {
C251 COMPILER V5.57.0,  voice_command_adaption_data_ctl                                    08/11/20  05:51:59  PAGE 4   

                     (U8 GENERIC_PTR)&dataBase_APD,
                     (U8 GENERIC_PTR)&gVoiceCommand_APD_EvtDataMap
                   },
                   0,
                   0,//eventNo
                   0,      //actionPatternNo
                   {
                   
                     {0, 0, 0, 0}, //SET0
                   },
                   {
                     { //SET0
                       { 
                         0
                       },
                       {
                         0,        /*VC_EVT_PAIRING*/
                         0,        /*VC_EVT_CHECK_BATTERY*/
                         0,        /*VC_EVT_AM_I_CONNECTED*/
                         0,        /*VC_EVT_LAST_CALL_OUT*/
                         0,        /*VC_EVT_WHAT_CAN_I_SAY*/
                         0,        /*VC_EVT_TAKE_THE_CALL*/
                         0,        /*VC_EVT_REJECT*/ 
                         0,        /*VC_EVT_CANCEL*/ 
                         0,                
                         0, 
                         0, 
                       }
                     },
                     { //SET1
                       { 
                         0
                       },
                       {
                         0,                /*VC_EVT_PAIRING*/
                         0,                /*VC_EVT_CHECK_BATTERY*/
                         0,                /*VC_EVT_AM_I_CONNECTED*/
                         0,                /*VC_EVT_LAST_CALL_OUT*/
                         0,                /*VC_EVT_WHAT_CAN_I_SAY*/
                         0,                /*VC_EVT_TAKE_THE_CALL*/
                         0,                /*VC_EVT_REJECT*/ 
                         0,                /*VC_EVT_CANCEL*/ 
                         0,                
                         0, 
                         0,
                       }
                     },  
                   },
                 },
                 {0, 0}
               };
               #endif


Module Information          Static   Overlayable
------------------------------------------------
  code size            =    ------     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
C251 COMPILER V5.57.0,  voice_command_adaption_data_ctl                                    08/11/20  05:51:59  PAGE 5   

  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       309     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
