#ifndef _LL_SEMAPHORE_H_
#define _LL_SEMAPHORE_H_
#include "config.h"
#include "ctlr_config.h"
#if (LE_SUPPORTED_CONTROLLER)
#include "os.h"



////////////////////////////////////////////////////////////////////////////////
// Constant Definitions ////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
#define LL_SEM_INIT_CNT 1



////////////////////////////////////////////////////////////////////////////////
// Type Definitions ////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
typedef struct
{
    U8 usable_key;
    U8 req_key;

} LL_SEMCTL_STRU, OS_PTR LL_SEMCTL_STRU_PTR;



////////////////////////////////////////////////////////////////////////////////
// Function Prototypes /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
EXTERN VOID LL_sem_init(LL_SEMCTL_STRU_PTR sem_ctl_ptr);
EXTERN U8 LL_sem_get_key(LL_SEMCTL_STRU_PTR sem_ctl_ptr);
EXTERN BOOL LL_sem_chk_key(LL_SEMCTL_STRU_PTR sem_ctl_ptr,U8 key);
EXTERN VOID LL_sem_release_key(LL_SEMCTL_STRU_PTR sem_ctl_ptr);

#endif
#endif /* _LL_SEMAPHORE_H_ */

