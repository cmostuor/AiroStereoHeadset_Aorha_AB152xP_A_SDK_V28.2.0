#ifndef _LC_DIRECTTESTMODE_H_
#define _LC_DIRECTTESTMODE_H_
#include "ctlr_config.h"
#if (LE_SUPPORTED_CONTROLLER)
#include "LC_BLE.h"


#define ENABLE_TX_DATA_REPLACEMENT 0x80
#define LE_TEST_MODE_TX_DATA_ENABLED  0x80
#define LE_TEST_MODE_TX_DATA_DISABLED  0x00

#define LC_LE_ENABLE_TX_TEST(A)                 LC_SFR_WRITE_BY_E6(E6OFFS_RW_TX_TEST_CTRL, A | LE_TEST_MODE_TX_DATA_ENABLED)
#define LC_LE_DISABLE_TX_TEST()                 LC_SFR_WRITE_BY_E6(E6OFFS_RW_TX_TEST_CTRL, LE_TEST_MODE_TX_DATA_DISABLED)
#define LC_LE_SET_TX_TEST_PACKET_PAYLOAD_HDR(A) LC_SFR_WRITE_BY_E6(E6OFFS_RW_TX_TEST_PAYLOAD_HEADER_B0, A)
#define LC_LE_SET_TX_TEST_PACKET_LENGTH(A)      LC_SFR_WRITE_BY_E6(E6OFFS_RW_SW_TX_LEN, A)
#define LC_LE_SET_DIRECT_TESTMODE_TRX_LEN_CTL() LC_SFR_WRITE_BY_E6(E6OFFS_RW_SW_TRX_LEN_CTRL, (LE_TX_LEN_BASED_ON_SW_TX_LEN | LE_RX_LEN_MODE2))


typedef struct
{
    U8 offset;
    U8 dummy;
    U8 reduceOpcode;
    U8 stdOgf;
    U8 len;
    U8 channel;
    U8 length_of_test_data;
    U8 packet_payload;

} TEST_CMD_STRU, OS_PTR TEST_CMD_STRU_PTR;

#endif
#endif
