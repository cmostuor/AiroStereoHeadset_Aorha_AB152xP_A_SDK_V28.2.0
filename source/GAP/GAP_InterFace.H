//////////////////////////////////////////////////////////
// Copyright@ 2009 Airoha.  All right reserved.
//////////////////////////////////////////////////////////

#ifndef _GAP_INTERFACE_H_
#define _GAP_INTERFACE_H_

#include "os.h"
#include "GAP_ROM_Interface.h"

#ifdef _GAP_C_
#define GAP_EXTERN
#else
#define GAP_EXTERN extern
#endif

PUBLIC void GAP (void);
PUBLIC void GAP_Init (void);

//HCI related profile command  B
//#define GAP_CMD_OPCODE_OFFSET								0x80	//Move to ROM

#define GAP_CMD_FROM_PROFILE_WRITE_DISCOVERABILITY_MODE		(0x01 + GAP_CMD_OPCODE_OFFSET) 
#define GAP_CMD_FROM_PROFILE_WRITE_CONNECTABILITY_MODE 		(0x02 + GAP_CMD_OPCODE_OFFSET)
#define GAP_CMD_FROM_PROFILE_WRITE_PAIRING_MODE				(0x03 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_AUTHENTICATION					(0x04 + GAP_CMD_OPCODE_OFFSET)
#define GAP_CMD_FROM_PROFILE_WRITE_SECURITY_MODE			(0x05 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_LINK_KEY_REQUEST_REPLY			(0x06 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_LINK_KEY_REQUEST_NEG_REPLY		(0x07 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_PIN_CODE_REQUEST_REPLY			(0x08 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_PIN_CODE_REQUEST_NEG_REPLY		(0x09 + GAP_CMD_OPCODE_OFFSET)
#define GAP_CMD_FROM_PROFILE_GENERAL_AND_LIMITED_INQUIRY	(0x0A + GAP_CMD_OPCODE_OFFSET)
#define GAP_CMD_FROM_PROFILE_NAME_DISCOVERY					(0x0B + GAP_CMD_OPCODE_OFFSET)
#define GAP_CMD_FROM_PROFILE_DEVICE_DISCOVERY				(0x0C + GAP_CMD_OPCODE_OFFSET)
#define GAP_CMD_FROM_PROFILE_BONDING						(0x0D + GAP_CMD_OPCODE_OFFSET)
#define GAP_CMD_FROM_PROFILE_INQUIRY_CANCEL					(0x0E + GAP_CMD_OPCODE_OFFSET)
#define GAP_CMD_FROM_PROFILE_NAME_DISCOVERY_CANCEL			(0x0F + GAP_CMD_OPCODE_OFFSET)
#define GAP_CMD_FROM_PROFILE_DEVICE_DISCOVERY_CANCEL		(0x10 + GAP_CMD_OPCODE_OFFSET)
#define GAP_CMD_FROM_PROFILE_BONDING_CANCEL					(0x11 + GAP_CMD_OPCODE_OFFSET)
#define GAP_CMD_FROM_PROFILE_LINK_ESTABLISHMENT      		(0x12 + GAP_CMD_OPCODE_OFFSET)
#define GAP_CMD_FROM_PROFILE_LINK_ESTABLISHMENT_CANCEL		(0x13 + GAP_CMD_OPCODE_OFFSET)
#define GAP_CMD_FROM_PROFILE_DISCONNECT						(0x14 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_ACCEPT_CONNECTION				(0x15 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_REJECT_CONNECTION				(0x16 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_SETUP_SCO						(0x17 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_ACCEPT_SCO						(0x18 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_REJECT_SCO						(0x19 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_SET_CONNECT_ENCRYPT			(0x1A + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_SNIFF_MODE						(0x1B + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_EXIT_SNIFF_MODE				(0x1C + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_WRITE_LINK_POLICY_SETTINGS		(0x1D + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_WRITE_DEF_LINK_POLICY_SETTINGS	(0x1E + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_WRITE_CLASS_OF_DEVICE			(0x1F + GAP_CMD_OPCODE_OFFSET)

//#define GAP_CMD_FROM_PROFILE_READ_BD_ADDR					(0x20 + GAP_CMD_OPCODE_OFFSET)//Test070521
//#define GAP_CMD_FROM_PROFILE_IO_CAPABILITY_REQUEST_REPLY			(0x21 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_USR_CONFIRMATION_REQ_REPLY				(0x22 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_USR_CONFIRMATION_REQ_NEGATIVE_REPLY	(0x23 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_USR_PASSKEY_REQ_REPLY					(0x24 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_USR_PASSKEY_REQ_NEGATIVE_REPLY			(0x25 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_REMOTE_OOB_DATA_REQ_REPLY				(0x26 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_REMOTE_OOB_DATA_REQ_NEGATIVE_REPLY		(0x27 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_IO_CAPABILITY_REQ_NEGATIVE_REPLY		(0x28 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_SEND_KEYPRESS_NOTIFICATION				(0x29 + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_SWITCH_ROLE							(0x2A + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_READ_REMOTE_VERSION_INFORMATION		(0x2B + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_SNIFF_SUBRATING						(0x2C + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_QOS_SETUP								(0x2D + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_DELETE_STORE_LINK_KEY					(0x2E + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_REFRESH_ENCRYPTION_KEY					(0x2F + GAP_CMD_OPCODE_OFFSET)
//#define GAP_CMD_FROM_PROFILE_CHANGE_CONN_PKT_TYPE					(0x30 + GAP_CMD_OPCODE_OFFSET)

//BLE
/*						//Move to ROM
#ifdef LE_SUPPORTED_HOST_FLASH
#define GAP_LE_CMD_FROM_PROFILE_SET_ADV_PARAMETER           (0x31 + GAP_CMD_OPCODE_OFFSET)    //177
#define GAP_LE_CMD_FROM_PROFILE_SET_ADV_DATA   	            (0x32 + GAP_CMD_OPCODE_OFFSET)    //178
#define GAP_LE_CMD_FROM_PROFILE_SET_SCAN_RESP_DATA   	    (0x33 + GAP_CMD_OPCODE_OFFSET)    //179
#define GAP_LE_CMD_FROM_PROFILE_ADVERTISING_ENABLE   	    (0x34 + GAP_CMD_OPCODE_OFFSET)    //180
#define GAP_LE_CMD_FROM_PROFILE_ADVERTISING_DISABLE   	    (0x35 + GAP_CMD_OPCODE_OFFSET)    //181
#endif
*/
#ifdef LE_SUPPORTED_HOST_FLASH
#define GAP_LE_CMD_FROM_PROFILE_AUTHENTICATION_REQUEST  	(0x37 + GAP_CMD_OPCODE_OFFSET)    //183
#endif

//HCI related profile command  E

//HCI related profile event  B
#define GAP_EVENT_TO_PROFILE_WRITE_DISCOVERABILITY_MODE_COMPLETE		(0x01 + GAP_CMD_OPCODE_OFFSET) 
#define GAP_EVENT_TO_PROFILE_WRITE_CONNECTABILITY_MODE_COMPLETE 		(0x02 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_WRITE_PAIRING_MODE_COMPLETE				(0x03 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_AUTHENTICATION_COMPLETE					(0x04 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_WRITE_SECURITY_MODE_COMPLETE				(0x05 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_LINK_KEY_REQUEST_REPLY_COMPLETE			(0x06 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_LINK_KEY_REQUEST_NEG_REPLY_COMPLETE		(0x07 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_PIN_CODE_REQUEST_REPLY_COMPLETE			(0x08 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_PIN_CODE_REQUEST_NEG_REPLY_COMPLETE		(0x09 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_GENERAL_AND_LIMITED_INQUIRY_COMPLETE		(0x0A + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_NAME_DISCOVERY_COMPLETE					(0x0B + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_DEVICE_DISCOVERY_COMPLETE					(0x0C + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_BONDING_COMPLETE							(0x0D + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_INQUIRY_CANCEL_COMPLETE					(0x0E + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_NAME_DISCOVERY_CANCEL_COMPLETE				(0x0F + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_DEVICE_DISCOVERY_CANCEL_COMPLETE			(0x10 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_BONDING_CANCEL_COMPLETE					(0x11 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_LINK_ESTABLISHMENT_COMPLETE      			(0x12 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_LINK_ESTABLISHMENT_CANCEL_COMPLETE			(0x13 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_DISCONNECT_COMPLETE						(0x14 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_ACCEPT_CONNECTION_COMPLETE					(0x15 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_REJECT_CONNECTION_COMPLETE					(0x16 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_SETUP_SCO_COMPLETE							(0x17 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_ACCEPT_SCO_COMPLETE						(0x18 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_REJECT_SCO_COMPLETE						(0x19 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_SET_CONNECT_ENCRYPT_COMPLETE				(0x1A + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_SNIFF_MODE_COMPLETE						(0x1B + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_EXIT_SNIFF_MODE_COMPLETE					(0x1C + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_WRITE_LINK_POLICY_SETTINGS_COMPLETE		(0x1D + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_WRITE_DEF_LINK_POLICY_SETTINGS_COMPLETE	(0x1E + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_WRITE_CLASS_OF_DEVICE_COMPLETE				(0x1F + GAP_CMD_OPCODE_OFFSET)

#define GAP_EVENT_TO_PROFILE_READ_BD_ADDR_COMPLETE							(0x20 + GAP_CMD_OPCODE_OFFSET)//Test070521
#define GAP_EVENT_TO_PROFILE_IO_CAPABILITY_REQUEST_REPLY_COMPLETE			(0x21 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_USR_CONFIRMATION_REQ_REPLY_COMPLETE			(0x22 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_USR_CONFIRMATION_REQ_NEGATIVE_REPLY_COMPLETE	(0x23 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_USR_PASSKEY_REQ_REPLY_COMPLETE					(0x24 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_USR_PASSKEY_REQ_NEGATIVE_REPLY_COMPLETE		(0x25 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_REMOTE_OOB_DATA_REQ_REPLY_COMPLETE				(0x26 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_REMOTE_OOB_DATA_REQ_NEGATIVE_REPLY_COMPLETE	(0x27 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_IO_CAPABILITY_REQ_NEGATIVE_REPLY_COMPLETE		(0x28 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_SEND_KEYPRESS_NOTIFICATION_COMPLETE			(0x29 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_SWITCH_ROLE_COMPLETE							(0x2A + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_READ_REMOTE_VERSION_INFORMATION_COMPLETE		(0x2B + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_SNIFF_SUBRATING_COMPLETE						(0x2C + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_QOS_SETUP_COMPLETE								(0x2D + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_DELETE_STORE_LINK_KEY_COMPLETE					(0x2E + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_REFRESH_ENCRYPTION_KEY_COMPLETE				(0x2F + GAP_CMD_OPCODE_OFFSET)

//BLE
/*					//Move to ROM
#ifdef LE_SUPPORTED_HOST_FLASH
#define GAP_EVENT_TO_PROFILE_SET_ADV_PARAMETER_COMPLETE                     (0x31 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_SET_ADV_DATA_COMPLETE   	                    (0x32 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_SET_SCAN_RESP_DATA_COMPLETE   	                (0x33 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_ADVERTISING_ENABLE_COMPLETE   	                (0x34 + GAP_CMD_OPCODE_OFFSET)
#define GAP_EVENT_TO_PROFILE_ADVERTISING_DISABLE_COMPLETE   	            (0x35 + GAP_CMD_OPCODE_OFFSET)
#endif
*/

//#define GAP_CONNECTION_TO							(60 * 3200L)//60 Sec	//Move to ROM
#define GAP_COMMAND_TO								(40 * 3200L)//5 Sec

//GAP Command State B
//#define GAP_STATE_IDLE							0	//Move to ROM
//#define GAP_STATE_HCI_COMMAND   					1

//HCI Command Para B
/*											//Move to ROM
#define GAP_COMMAND_OP_OFFSET						2
#define GAP_COMMAND_PARA_LEN_OFFSET					4
#define GAP_COMMAND_PARA0_OFFSET					5
#define GAP_COMMAND_PARA1_OFFSET					6
#define GAP_COMMAND_PARA2_OFFSET					7
#define GAP_COMMAND_PARA3_OFFSET					8
#define GAP_COMMAND_PARA4_OFFSET					9
#define GAP_COMMAND_PARA5_OFFSET					10
#define GAP_COMMAND_PARA6_OFFSET					11
#define GAP_COMMAND_PARA7_OFFSET					12
#define GAP_COMMAND_PARA8_OFFSET					13
#define GAP_COMMAND_PARA9_OFFSET					14
#define GAP_COMMAND_PARAA_OFFSET					15
#define GAP_COMMAND_PARAB_OFFSET					16
#define GAP_COMMAND_PARAC_OFFSET					17
#define GAP_COMMAND_PARAD_OFFSET					18



#define GAP_EVENT_CODE_OFFSET						3
#define GAP_EVENT_LEN_OFFSET						4
#define GAP_EVENT_PARA0_OFFSET						5
#define GAP_EVENT_PARA1_OFFSET						6
#define GAP_EVENT_PARA2_OFFSET						7
#define GAP_EVENT_PARA3_OFFSET						8
#define GAP_EVENT_PARA4_OFFSET						9
#define GAP_EVENT_PARA5_OFFSET						10
#define GAP_EVENT_PARA6_OFFSET						11
#define GAP_EVENT_PARA7_OFFSET						12
#define GAP_EVENT_PARA8_OFFSET						13
#define GAP_EVENT_PARA9_OFFSET						14
#define GAP_EVENT_PARAA_OFFSET						15
*/


#define NON_DISCOVERABLE_MODE						0x00
#define LIMITED_DISCOVERABLE_MODE					0x01
#define GENERAL_DISCOVERABLE_MODE					0x02
#define SPECIAL_LIMITED_DISCOVERABLE_MODE			0x08
#define SAC_NON_DISCOVERABLE_MODE					0x00
#define SAC_LIMITED_DISCOVERABLE_MODE				0x10
#define SAC_GENERAL_DISCOVERABLE_MODE				0x20

#define CONNECTABLE_MODE   							0x02
#define NON_CONNECTABLE_MODE   						0x00
#define SAC_CONNECTABLE_MODE						0x20
#define SAC_NON_CONNECTABLE_MODE					0x00

#define SAC_ENABLE_BIT								0x80

#define SECURITY_MODE_1	    						0
#define SECURITY_MODE_2	    						1
#define SECURITY_MODE_3								2
#define SECURITY_MODE_4								3

#define NON_PAIRING_MODE							1
#define PAIRING_MODE								0

//#define OLD_MQ										0	//Move to ROM
//#define NEW_MQ										1

/*							//Move to ROM
#define GAP_SUBSTATE01				1
#define GAP_SUBSTATE02				2
#define GAP_SUBSTATE03				3
#define GAP_SUBSTATE04				4
#define GAP_SUBSTATE05				5
#define GAP_SUBSTATE06				6	
#define GAP_SUBSTATE07				7
#define GAP_SUBSTATE08				8
#define GAP_SUBSTATE09				9
#define GAP_SUBSTATE10				10
#define GAP_SUBSTATE11				11
#define GAP_SUBSTATE12				12
#define GAP_SUBSTATE13				13
#define GAP_SUBSTATE14				14
#define GAP_SUBSTATE_COMPLETE		15

#define GAP_SUB2STATE01				1
#define GAP_SUB2STATE02				2
#define GAP_SUB2STATE03				3
#define GAP_SUB2STATE04				4
#define GAP_SUB2STATE05				5
#define GAP_SUB2STATE06				6	
#define GAP_SUB2STATE07				7
#define GAP_SUB2STATE08				8
#define GAP_SUB2STATE09				9
#define GAP_SUB2STATE10				10
#define GAP_SUB2STATE11				11
#define GAP_SUB2STATE12				12
#define GAP_SUB2STATE13				13
#define GAP_SUB2STATE14				14
#define GAP_SUB2STATE_COMPLETE		15

#define GAP_EVENT_TO_PROFILE  1
#define GAP_EVENT_NOT_PROFILE 0

typedef struct
{
	U8 						top1_state;	//Decide IDLE or HCI
	U8 						top2_state; //Decide Which Command
	U8 						sub_state;  //main State in the Command
	U8						sub2_state;  //sub State in the Command
	U8 						caller_top_state;//Decide Which Command
	U8 						caller_sub_state;
	OST XDATA_PTR 			ost_command_ptr;
	U8						command_err;
	U8						cancel_state;//cancel command issued in which state in main process
	U8						command_op;//save which command op is issued now
	U8						inquiry_total_device;//total inquiry number
	U8						device_number;//the command to which device in inquiry table
//	U8						L2CAP_index;//current index of connection_handle_info table
// Found this is not used	U8						channel_index;//current index of L2CAP channel table
	U8						connection_link_type;//current link type of connection_handle_info table
	U8						hci_flow_control_ready;
	U8						discoverability_mode;
	U8						connectability_mode;
	U8						security_mode;
	U8						pairing_mode;
	U8  XDATA_PTR			command_ptr;
	U8						connection_handle;
	U8						security_mode4_authed;
	U8						encrypt_after_authen_enable;
	U8						simple_pairing_bond_enable;
} GAP_CONTROL_TYPE;
*/

GAP_EXTERN	GAP_ROM_CONTROL_TYPE	XDATA	gGAP_ctl;

//#define GAP_TEST_CASE_GENERATION
// WARNNING!!! DEFINE  GAP_TEST_CASE_GENERATION MUST ALSO DEFINE THE FOLLOWING:
// 1. (forcelinkn95.h) Need MMI Send  KEY_DISCOVERABLE to trigger this test case generation;
// 2. (forcelinkn95.h) Need set MMI PairModeTimeout and PairModeTimeoutIfPDLIsEmpty to 0xFFFF for well-control the timer;
// 3. (LM_inrfacete.h) Need set ACT_FUNCTION 

// IMPORTANT!!
//	For some category A cases, some modification must be taken.
//		1. TP/EST/LIE/BV-02C, after we send LMP_setupcomplete, we will send AFH, max slot... when tester send LMP_detach.
//			For pass this test case, we must stop sending these PDUs and set LM substate to 0x59 instead of 0x52.
//		2. TP/SEC/SEM/BV-02C, PM will detach after receiving HCI_EVENT_ENCRYPTION_CHANGE with error ERR_UNSUPPORTED_REMOTE_FEATURE_UNSUPPORTED_LMP_FEATURE
//			in PM state PM_SUBSTATE_REMOTE_ENCRYPTION_COMPLETE.
//			We must bypass this event, don't send detach, and do the following procedure.
//			

#ifdef GAP_TEST_CASE_GENERATION
	PUBLIC void GAP_TestCaseGeneration(void);
	GAP_EXTERN U8 XDATA gGAP_TP_enter_count;
#else	
	#define GAP_TestCaseGeneration() 
#endif

#endif
